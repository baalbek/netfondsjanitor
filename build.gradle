apply plugin: 'java'

apply from: 'base.gradle'

sourceSets {
    main {
        java {
            srcDir "src/java"
        }
        resources {
            srcDir "src/resources"
        }
        output.classesDir = 'target/classes'
    }
    test {
        java {
            srcDir "test/java"
        }
        resources {
            srcDir "test/resources"
        }
    }
}

dependencies {
    compile project(':oahu')
    compile project(':ranoraraku')
    compile project(':waimea')
    compile project(':netfonds-repos')
    //compile project(':kilauea')
    //------------------- aspectj -------------------
    //compile "org.aspectj:aspectjrt:$aspectjVersion"
    //compile "org.aspectj:aspectjweaver:$aspectjVersion"
    //compile "org.aspectj:aspectjtools:$aspectjVersion"
    //------------------- spring -------------------
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    //------------------- clojure-------------------
    runtime "org.clojure:clojure:$clojureVersion"
    runtime "org.clojure:clojure-contrib:$clojureContribVersion"
    //------------------- diverse -------------------
    compile "org.mybatis:mybatis:$mybatisVersion"
    compile "junit:junit:$junitVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "args4j:args4j:$arg4jVersion"
    compile "org.clojure:algo.monads:$algoMonadsVersion"
    compile "net.sourceforge.htmlunit:htmlunit:$htmlunitVersion"
    runtime "org.jsoup:jsoup:1.8.3"
    runtime "org.ccil.cowan.tagsoup:tagsoup:1.2.1"
    //------------------- Colt -------------------
    runtime "colt:colt:$coltVersion"
    //runtime group: 'jline', name: 'jline', version: '0.9.94'
}

String clazzPath() {
    ((configurations.runtime.files.collect { f ->
        f.name
    }) << ".").join(" ")
}


task copyDeps(type: Copy) {
    into 'dist' from configurations.runtime
}

task buildAndCopy(type: Copy, dependsOn: build) {
    description 'Builds jar and copies into dist'
    into 'dist' from new File("$libsDir/$myLibName")
}

jar {
    manifest {
        attributes 'Main-Class': 'netfondsjanitor.App'
        attributes 'Class-Path': clazzPath()
    }
    from ("target/classes") include "**/*.class"
}

task printClassPath << {

    println clazzPath()
}


