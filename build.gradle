apply plugin: 'java'

apply from: '../gradlecommon/depversions.gradle'

group = 'rcstadheim'

configurations {
    aspectjTask
}

sourceSets {
    main {
        java {
            srcDir "src/java"
        }
        resources {
            srcDir "src/resources"
        }
        output.classesDir = 'build/classes'
    }
    test {
        java {
            srcDir "test/java"
        }
        resources {
            srcDir "test/resources"
        }
    }
}

ext {
    major = '5'
    minor = '3'
    // parentDist = '/home/rcs/opt/java/netfondsjanitor/dist'
    parentDist = '../netfondsjanitor/dist'
    myLibName = "netfondsjanitor-${version}.jar"
}

version = "${major}.${minor}.SNAPSHOT"

archivesBaseName = 'netfondsjanitor'

sourceCompatibility = 1.8

targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'http://clojars.org/repo'
    }
}


dependencies {
    compile project(':oahu')
    compile project(':ranoraraku')
    compile project(':netfonds-repos')
    runtime project(':vega')
    //------------------- spring -------------------
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    //------------------- clojure-------------------
    compile "org.clojure:clojure:$clojureVersion"
    compile "org.clojure:clojure-contrib:$clojureContribVersion"
    //------------------- diverse -------------------
    compile "org.mybatis:mybatis:$mybatisVersion"
    compile "junit:junit:$junitVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "args4j:args4j:$arg4jVersion"
    compile "org.clojure:algo.monads:$algoMonadsVersion"
    compile "net.sourceforge.htmlunit:htmlunit:$htmlunitVersion"
    compile "org.jsoup:jsoup:1.8.3"
    compile "org.ccil.cowan.tagsoup:tagsoup:1.2.1"
    //------------------- Colt -------------------
    runtime "colt:colt:$coltVersion"
}

task common << {
    println "$springVersion"
}
String clazzPath() {
    def runt = configurations.runtime.files.collect { f ->
            f.name
    }
    runt.add(".")
    runt.join(" ")
}

task printClazzPath << {
    println clazzPath()
}

task printXx1 << {
    configurations.runtime.files.collect { f ->
        println f
    }
}
jar {
    manifest {
        attributes 'Main-Class': 'netfondsjanitor.App'
        attributes 'Class-Path': clazzPath()
    }
    from ("target/classes") include "**/*.class"
}

/*
ext.top = '/home/rcs/opt/java'
ext.netfondsHome = "$top/netfondsjanitor"
ext.reposHome = "$top/netfonds-repos"
ext.classesHome = "$netfondsHome/build/classes:$reposHome/build/classes"
ext.targetClassesHome = "$netfondsHome/target/classes"
ext.aspectHome = "$netfondsHome/src/aspect"

task compileAop << {
    def aopcp = configurations.compile.asPath << ":" << configurations.aspectjTask.asPath
    ant.taskdef(resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
            classpath: configurations.aspectjTask.asPath)
    ant.iajc(inpath: classesHome,
            source: '1.8',
            target: '1.8',
            destDir: targetClassesHome,
            sourceRoots: aspectHome,
            classpath: aopcp)
}
*/

task copydeps(type: Copy) {
    into 'dist' from configurations.runtime
}

task setupDist << {
    ant.symlink(resource: "../local/log4j.xml", link: "dist/log4j.xml")
    ant.symlink(resource: "../src/resources/mybatis.conf.xml", link: "dist/mybatis.conf.xml")
    ant.symlink(resource: "../local/netfonds-dbcp.properties", link: "dist/netfonds-dbcp.properties")
    ant.symlink(resource: "../local/netfondsjanitor.xml", link: "dist/netfondsjanitor.xml")
    ant.symlink(resource: "../local/runjar", link: "dist/runjar")
}

buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath group: 'rcstadheim', name: 'palenque',
                version: '1.0'
    }
}

apply plugin: 'rcstadheim.palenque'
