apply plugin: 'java'

group = 'rcstadheim'

archivesBaseName = 'netfondsjanitor'

ext.springVersion = '4.2.3.RELEASE'
ext.htmlunitVersion = '2.22'
ext.junitVersion = '4.11'
ext.log4jVersion = '1.2.17'
ext.aspectjVersion = '1.8.9'
ext.mybatisVersion = '3.4.1'
ext.mongoVersion = '2.12.5'
ext.postgresVersion = '9.4-1206-jdbc42'  // '9.1-901.jdbc4'
ext.coltVersion = '1.2.0'
ext.arg4jVersion = '2.33'
ext.commonsLangVersion = '20030203.000129'
ext.enliveVersion = '1.1.5'

//-------------------- clojure ---------------------
ext.clojureVersion = '1.7.0'
ext.clojureContribVersion = '1.2.0'
ext.algoMonadsVersion = '0.1.5'
ext.clojuresqueVersion = '1.5.8'
ext.numericTowerVersion = '0.0.4'


ext.major = '5'
ext.minor = '3'

ext.parentDist = '/home/rcs/opt/java/netfondsjanitor/dist'

version = "${major}.${minor}.SNAPSHOT"

ext.myLibName = "netfondsjanitor-${version}.jar"

configurations {
    sshAntTask
}

sourceCompatibility = 1.8

targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'http://clojars.org/repo'
    }
}
sourceSets {
    main {
        java {
            srcDir "src/java"
        }
        resources {
            srcDir "src/resources"
        }
    }
    test {
        java {
            srcDir "test/java"
        }
        resources {
            srcDir "test/resources"
        }
    }
}

dependencies {
    compile project(':oahu')
    compile project(':ranoraraku')
    compile project(':waimea')
    compile project(':netfonds-repos')
    //compile project(':kilauea')
    //------------------- aspectj -------------------
    compile "org.aspectj:aspectjrt:$aspectjVersion"
    compile "org.aspectj:aspectjtools:$aspectjVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"
    //------------------- spring -------------------
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    //------------------- clojure-------------------
    runtime "org.clojure:clojure:$clojureVersion"
    runtime "org.clojure:clojure-contrib:$clojureContribVersion"
    //------------------- diverse -------------------
    compile "junit:junit:$junitVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "args4j:args4j:$arg4jVersion"
    compile "org.clojure:algo.monads:$algoMonadsVersion"
    compile "net.sourceforge.htmlunit:htmlunit:$htmlunitVersion"
    runtime "org.jsoup:jsoup:1.8.3"
    runtime "org.ccil.cowan.tagsoup:tagsoup:1.2.1"


    //------------------- Colt -------------------
    runtime "colt:colt:$coltVersion"
}

String clazzPath() {
    ((configurations.runtime.files.collect { f ->
        f.name
    }) << ".").join(" ")
}


task coypJavaDeps(type: Copy) {
    into 'dist' from configurations.runtime
}

jar {
    manifest {
        attributes 'Main-Class': 'netfondsjanitor.App'
        attributes 'Class-Path': clazzPath()
    }
    from ("target/classes") include "**/*.class"
}

buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath group: 'rcstadheim', name: 'palenque',
                version: '1.0'
    }
}


def leinResources() {
    def result = []

    def subp = getProject().subprojects.findAll()
    subp.each {
        def at = it.getTasks()
        Jar j = at.findByName('jar') as Jar
        result.add(j.archivePath)
    }
    result
}

task x << {
    def r = leinResources()
    r.each {
        println it.getAbsolutePath()
    }
}

apply plugin: 'rcstadheim.palenque'

task myLeinDeps (type: rcstadheim.palenque.LeinDepsTask) {
    leinProjectFile = file('demoproj.clj')
    leinTemplateFile = file('local/project.clj')
}

